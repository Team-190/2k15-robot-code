// RobotBuilder Version: 1.5
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.

package org.usfirst.frc190.FRC2k15.subsystems;

import org.usfirst.frc190.FRC2k15.RobotMap;
import org.usfirst.frc190.FRC2k15.Components.LimitedPIDSubsystem;

import edu.wpi.first.wpilibj.AnalogPotentiometer;
import edu.wpi.first.wpilibj.DigitalInput;
import edu.wpi.first.wpilibj.SpeedController;
import edu.wpi.first.wpilibj.command.PIDSubsystem;
import edu.wpi.first.wpilibj.command.Subsystem;
import edu.wpi.first.wpilibj.livewindow.LiveWindow;

/**
 *Controls the four bar linkage on the chainsaw
 */
public class Chainsaw4Bar extends PIDSubsystem implements LimitedPIDSubsystem {

	// TODO: Update These
	// Note: this is assuming that the pot has a "Range" of 5
	public final double humanPosition = 0.390;
	public final double collectPositionNarrow = 1.36;//1.236;//1.192
	public final double collectPositionWide = 1.36;//1.42;
	public final double scoringPosition = 1.820;
	public final double storagePosition = 0.7; //1.248;//1.192; //1.236
	public final double alignPosition = 1.33;
	public final double RCCollectPosition = 1.68;
	
	public final double toteAlignPosition = 1.209;
	public final double totePickupPosition = 1.489;

	// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    AnalogPotentiometer fourBarPot = RobotMap.chainsaw4BarfourBarPot;
    SpeedController fourBar = RobotMap.chainsaw4BarfourBar;
    DigitalInput fourBarExtended = RobotMap.chainsaw4BarfourBarExtended;
    DigitalInput fourBarRetracted = RobotMap.chainsaw4BarfourBarRetracted;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS

	// Initialize your subsystem here
	public Chainsaw4Bar() {
		// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=PID
        super("Chainsaw4Bar", -8.0, 0.0, 1.0);
        setAbsoluteTolerance(0.003);
        getPIDController().setContinuous(false);
        LiveWindow.addActuator("Chainsaw4Bar", "PIDSubsystem Controller", getPIDController());

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=PID

	}

	public void initDefaultCommand() {
		// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND
	}

	protected double returnPIDInput() {
		// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=SOURCE
        return fourBarPot.get();

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=SOURCE
	}

	protected void usePIDOutput(double output) {
		// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=OUTPUT
        fourBar.pidWrite(output);

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=OUTPUT
	}

	@Override
	public void setSpeed(double speed) {// sets the motor to move at speed
		disable();
		fourBar.set(-speed);
	}

	public boolean getExtended() {
		return fourBarExtended.get();
	}

	public boolean getRetracted() {
		return fourBarRetracted.get();
	}

	@Override
	public boolean atmax() {
		return getExtended();
	}

	@Override
	public boolean atmin() {
		return getRetracted();
	}

	@Override
	public void setPosition(double setpoint) {
		setSetpoint(setpoint);
		enable();
	}

	@Override
	public boolean atPosition() {
		return onTarget();
	}

	@Override
	public PIDSubsystem getSubSystem() {
		return this;
	}
	
	public double getPotValue(){
		return fourBarPot.get();
	}
}
