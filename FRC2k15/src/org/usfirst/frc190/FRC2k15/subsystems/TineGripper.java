// RobotBuilder Version: 1.5
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.

package org.usfirst.frc190.FRC2k15.subsystems;

import org.usfirst.frc190.FRC2k15.RobotMap;

import edu.wpi.first.wpilibj.AnalogPotentiometer;
import edu.wpi.first.wpilibj.DigitalInput;
import edu.wpi.first.wpilibj.SpeedController;
import edu.wpi.first.wpilibj.command.PIDSubsystem;
import edu.wpi.first.wpilibj.livewindow.LiveWindow;

/**
 *
 */
public class TineGripper extends PIDSubsystem {
	// TODO: Update these
	public final double containerPosition = 0.0;
	public final double narrowTotePosition = 0.0;
	public final double wideTotePosition = 0.0;
	public final double openPosition = 0.0;

	// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
	SpeedController gripper = RobotMap.tineGrippergripper;
	AnalogPotentiometer gripperPot = RobotMap.tineGrippergripperPot;
	DigitalInput open = RobotMap.tineGripperopen;
	DigitalInput closed = RobotMap.tineGripperclosed;

	// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS

	// Initialize your subsystem here
	public TineGripper() {
		// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=PID
		super("TineGripper", 1.0, 0.0, 0.0);
		setAbsoluteTolerance(0.2);
		getPIDController().setContinuous(false);
		LiveWindow.addActuator("TineGripper", "PIDSubsystem Controller",
				getPIDController());

		// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=PID
	}

	public void initDefaultCommand() {
		// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND

		// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND
	}

	protected double returnPIDInput() {
		// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=SOURCE
		return gripperPot.get();

		// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=SOURCE
	}

	protected void usePIDOutput(double output) {
		// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=OUTPUT
		gripper.pidWrite(output);

		// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=OUTPUT
	}

	/**
	 * Never call unless PID is disabled
	 * 
	 * @param speed
	 *            Speed to set the motor
	 */
	public void setSpeed(double speed) {
		gripper.set(speed);
	}

	public boolean getOpen() {
		return open.get();
	}

	public boolean getClosed() {
		return closed.get();
	}

}
