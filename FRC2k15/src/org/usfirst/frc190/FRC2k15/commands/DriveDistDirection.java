// RobotBuilder Version: 1.5
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.

package org.usfirst.frc190.FRC2k15.commands;

import org.usfirst.frc190.FRC2k15.Robot;

import edu.wpi.first.wpilibj.command.Command;

/**
 *
 */
public class DriveDistDirection extends Command {
	
	private double Speed = 0;
	private double Dist = 0;
	private double Dir = 0;

	public DriveDistDirection() {
		// Use requires() here to declare subsystem dependencies
		// eg. requires(chassis);

		// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
        requires(Robot.drivetrain);

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
	}

	//This is the actual constructor that should be used
	//It requires a speed (-1 to 1), a distance (> 0) and a direction (0-360)
	public DriveDistDirection(double inSpeed, double inDist, double inDir) {
		Speed = inSpeed;
		Dist = inDist;
		Dir = inDir;

		requires(Robot.drivetrain);
	}

	// Called just before this Command runs the first time
	protected void initialize() {
		// resetEncoders() resets the position of the encoders
		//Robot.drivetrain.resetEncoders();
	}

	// Called repeatedly when this Command is scheduled to run
	protected void execute() {
		Robot.drivetrain.MecanumDrivePolar(Speed, Dir, 0);
	}

	// Make this return true when this Command no longer needs to run execute()
	protected boolean isFinished() {
		//getDistance gets the distance the robot has traveled since the encoders were last reset
		//It doesn't matter which direction the robot moves, even backwards, it still reports the
		//distance as a positive number
		return Robot.oi.toteAlignInterupt.get() /*|| (Robot.drivetrain.getDistance() >= Dist)*/;
	}

	// Called once after isFinished returns true
	protected void end() {
		Robot.drivetrain.MecanumDrive(0, 0, 0, 0);
	}

	// Called when another command which requires one or more of the same
	// subsystems is scheduled to run
	protected void interrupted() {
		end();
	}
}
