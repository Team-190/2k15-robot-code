// RobotBuilder Version: 1.5
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc190.FRC2k15.commands;
import org.usfirst.frc190.FRC2k15.Robot;

import edu.wpi.first.wpilibj.command.CommandGroup;

/**
 *
 */
public class HumanPlayerLoading extends CommandGroup {
    
    public  HumanPlayerLoading() {
        // Add Commands here:
        // e.g. addSequential(new Command1());
        //      addSequential(new Command2());
        // these will run in order.

        // To run multiple commands at the same time,
        // use addParallel()
        // e.g. addParallel(new Command1());
        //      addSequential(new Command2());
        // Command1 and Command2 will run in parallel.

        // A command group will require all of the subsystems that each member
        // would require.
        // e.g. if Command1 requires chassis, and Command2 requires arm,
        // a CommandGroup containing them would require both the chassis and the
        // arm.
    	
    	//This is the full human player loading sequence
    	//It needs to be very robust
    	//It needs to allow for going back and forth between steps so if we screw one up, we can recover
    	
    	//Steps:
    	
    	
    	//Drive to hp station
    	
    	//chainsaw4bar(22) & chainsaw(hpPosition1)
    	//"wait until tote 1 is released"
    	//chainsaw(upSlightly)
    	//chainsawDriveDown() & Robot BackUp() for1 second
    	//chainsaw(hpPosition2)
    	//"drive to hp station" & possibly chainsaw4Bar(7)
    	//"wait for tote 2 to be released"
    	//chainsaw(hpPosition3) & chainsaw4Bar(22)
    	
    	//	Repeat the above sequence but with different setpoints two more times
    	
    	//double check that having hpState as static will work
    	switch (Robot.hpState) {
		case 0:
			break;

		default:
			break;
		}
    }
}
